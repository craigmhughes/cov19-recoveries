{"version":3,"sources":["components/heart.js","components/RenderCanvas.js","App.js","index.js"],"names":["Heart","url","color","useState","model","setModel","THREE","useMemo","OBJLoader","load","obj","traverse","child","isMesh","material","castShadow","object","Camera","three","useThree","camera","position","z","y","gl","setSize","window","innerWidth","innerHeight","RenderCanvas","rate","nhs","pulse","setPulse","props","useSpring","scale","rotation","config","mass","tension","friction","clamp","useEffect","beatInterval","Number","toString","split","substr","isNaN","interval","setInterval","clearInterval","onCreated","shadowMap","enabled","type","className","intensity","angle","penumbra","mesh","attach","navigator","serviceWorker","register","App","axios","require","default","Date","getDay","getHours","id","Cases","data","setData","a","getDb","db","foundEntry","getAll","then","res","catch","err","lastChecked","localStorage","getItem","undefined","fetchData","getDate","now","delete","console","log","get","latest","length","Recovered","i","temp","add","setItem","JSON","stringify","error","stores","openDB","upgrade","storeName","createObjectStore","keyPath","autoIncrement","createIndex","checkDb","replace","href","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.901ea7cf.chunk.js","sourcesContent":["import React, { useState, useEffect, useMemo } from 'react';\nimport { OBJLoader } from 'three/examples/jsm/loaders/OBJLoader';\nimport * as THREE from 'three';\n\nconst Heart = ({url, color})=>{\n\n    const [model, setModel] = useState();\n    const newMaterial = new THREE.MeshPhongMaterial({color: color});\n       \n    useMemo(() => new OBJLoader().load(url, (obj)=>{\n        obj.traverse((child)=>{\n            if (child.isMesh) child.material = new THREE.MeshPhongMaterial({color: color});\n            if ( child instanceof THREE.Mesh ) { child.castShadow = true; }\n        });\n\n        setModel(obj);\n    }), [url, color]);\n\n    return model ? <primitive object={model} /> : null;\n}\n\nexport default Heart;","import * as THREE from 'three'\nimport React, { useRef, useEffect, useState } from 'react'\nimport { Canvas, useThree } from 'react-three-fiber'\nimport { useSpring, a } from 'react-spring/three'\n\nimport Heart from './heart.js';\n\n/**\n * Camera, placed looking at center.\n */\nconst Camera = () => {\n    const three = useThree();\n    const camera = three.camera;\n    camera.position.z = 2.5;\n    camera.position.y = 0;\n    three.gl.setSize(window.innerWidth,window.innerHeight);\n\n    return null;\n};\n\n\nexport default function RenderCanvas({rate, nhs}){\n\n    const [pulse, setPulse] = useState(true);\n\n    const props = useSpring({\n        scale: !rate ? [0, 0, 0] : pulse ? [0.1, 0.1, 0.1] : [0.12,0.12,0.12],\n        rotation: [4.8, 0, 0],\n        position: [0,!rate ? -1 : -0.25 ,-2],\n        config: {mass:2, tension:25, friction:12, clamp: true}\n    });\n\n\n    useEffect(() => {\n        \n        let beatInterval = Number(((86400 / rate) * 1000).toString().split(\".\")[0].substr(0,6));\n\n        if(!isNaN(beatInterval)){\n            const interval = setInterval(() => {\n                setPulse(!pulse);\n            }, beatInterval);\n            return () => clearInterval(interval);\n        }\n    }, [pulse, rate]);\n    \n\n    return(\n        <Canvas onCreated={({ gl }) => ((gl.shadowMap.enabled = true), (gl.shadowMap.type = THREE.PCFSoftShadowMap))}\n            className=\"Canvas\">\n            <Camera/>\n            <ambientLight intensity={0.5} />\n            <spotLight intensity={0.85} position={[20, 5, 10]} angle={0.2} penumbra={1} castShadow />\n\n            <a.mesh\n            {...props}>\n                <Heart attach=\"geometry\" url=\"heart.obj\" color={nhs ? \"blue\" : \"red\"}/>\n            </a.mesh>\n            \n        </Canvas>\n    );\n}","import React, {useEffect, useState} from 'react';\nimport { openDB } from 'idb';\n\n\nimport './App.css';\nimport RenderCanvas from './components/RenderCanvas.js';\n\n\nfunction App() {\n  const axios = require('axios').default;\n\n  const [nhs, setNhs] = useState(new Date().getDay() === 4 && new Date().getHours() === 20);\n\n  const [data, setData] = useState({\n    id: 0,\n    Cases: 0,\n    Date: 0\n  });\n\n  /**\n   * Perform GET request to API endpoint for UK data on recovered cases.\n   *\n   */\n  async function checkDb(){\n    \n    const db = await getDb();\n\n    // Found entry in 'cases' idb.\n    let foundEntry = {};\n\n    await db.getAll('cases').then((res)=>{\n      foundEntry = res[0];\n    }).catch((err)=>{\n    });\n\n    // Get time data was last pulled from API.\n    let lastChecked = localStorage.getItem(\"lastChecked\");\n\n    if(foundEntry === undefined || lastChecked === null){\n      fetchData(db);\n    } else if(new Date(Number(lastChecked)).getDate() !== new Date(Date.now()).getDate()){\n\n      // Delete case entry\n      (await getDb()).delete('cases', 0);\n\n      fetchData(db); \n    } else {\n      setData(foundEntry);\n    }\n  }\n\n  function fetchData(db){\n    console.log(\"new data\")\n    axios.get('https://api.covid19api.com/live/country/united-kingdom/status/recovered').then(async (res)=>{\n\n      // Get latest entry.\n      let latest = res.data[res.data.length-1];\n\n      // Overwrite with useless keys omitted && Overwrite date with Date object.\n      latest = {\n        id: 0,\n        Cases: latest.Recovered,\n        Date: new Date(latest.Date)\n      };\n\n      for(let i = res.data.length; i > 0; i--){\n        let temp = res.data[i-1];\n\n        latest.Cases += temp.Recovered;\n      }\n\n      db.add('cases', latest).catch(()=>{});\n      localStorage.setItem(\"lastChecked\", JSON.stringify(Date.now()));\n      setData(latest);\n      \n    }).catch(err=>console.error(err));\n  }\n\n  async function getDb(){\n    if (!('indexedDB' in window)) {\n        console.log('This browser doesn\\'t support IndexedDB');\n        return false;\n    }\n\n    // ObjectStore names\n    const stores = ['cases'];\n\n    return await openDB('Heart', 1, {\n        upgrade(db){\n            for(let storeName of stores){\n                const store = db.createObjectStore(storeName, {\n                    keyPath: 'id',\n                    autoIncrement: true\n                });\n\n                store.createIndex('id','id');\n            }\n        }\n    });\n  }\n\n  useEffect(()=>{\n    getDb();\n\n    checkDb();\n  },[]);\n\n  return (\n    <main className=\"App\">\n      <RenderCanvas rate={data.Cases} nhs={nhs}/>\n      {nhs ?\n      <section className=\"update\">\n        <p className=\"update__cases\">Thank you</p>\n        <p className=\"update__subtitle\">{data.Cases.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")} Recovered UK cases (COVID-19)</p>\n        <p className=\"update__source\">Source <a href=\"https://github.com/CSSEGISandData/COVID-19\">Johns Hopkins CSSE</a></p>\n        <p className=\"update__author\"><a href=\"https://www.justgiving.com/associationofnhscharities\">#ClapForOurCarers</a></p>\n      </section>\n      :\n      <section className=\"update\">\n        <p className=\"update__cases\">{data.Cases.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}</p>\n        <p className=\"update__subtitle\">Recovered UK cases (COVID-19)</p>\n        <p className=\"update__source\">Source <a href=\"https://github.com/CSSEGISandData/COVID-19\">Johns Hopkins CSSE</a></p>\n\n        <p className=\"update__author\">Made by: <a href=\"https://github.com/craigmhughes\">@craigmhughes</a></p>\n      </section>}\n    </main>\n  );\n}\n\nif(navigator.serviceWorker){\n  navigator.serviceWorker.register('./sw.js');\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n"],"sourceRoot":""}